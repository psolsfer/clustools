name: Test on push and PR

on:
  push:
    branches: [ main, develop ]
    tags:
      - "v*"
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [
          "3.12",
          "3.13"
        ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: uv sync --all-extras

    # - name: Run tests with pytest
    #   run: uv run pytest --cov=clustools --cov-report=xml --cov-report=term-missing

    - name: Run linting
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Run type checking
      run: uv run mypy src/clustools

    - name: Run security checks
      run: uv run pip-audit

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
    #   with:
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false

  test-tox:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Install tox
      run: uv tool install tox --with tox-uv

    - name: Run tox
      run: tox
