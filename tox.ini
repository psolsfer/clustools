[tox]
isolated_build = True
envlist =
    check,
    lint,
    docs,
    report

[gh-actions]
python =

[testenv]
# Use uv for faster dependency resolution and installation
package = wheel
wheel_build_env = .pkg
setenv = PYTHONPATH = {toxinidir}
deps = tox-uv
skip_install = true
allowlist_externals = uv
commands_pre = uv sync --group test
commands =
    uv run pytest --basetemp={envtmpdir}

[testenv:py313]
depends = clean
commands_pre = uv sync --group test
commands =
    uv run pytest --basetemp={envtmpdir} --cov --cov-append

[testenv:check]
description = Format and check the code base
skip_install = true
deps = tox-uv
commands_pre = uv sync --group dev
commands =
    uv run prek run --all-files --show-diff-on-failure

[testenv:lint]
description = Run all linting/formatting checks
basepython = python
deps = tox-uv
commands_pre = uv sync --group test
commands =
    uv run ruff check src/clustools tests
    uv run ruff format --check src/clustools tests
    uv run mypy src/clustools

[testenv:docs]
description = Build documentation
deps = tox-uv
commands_pre = uv sync --group docs
commands =
    uv run mkdocs build

; [testenv:report]
; description = Generate coverage reports
; deps = tox-uv
; commands_pre = uv sync --group test
; commands =
;     uv run coverage report
;     uv run coverage html

[testenv:clean]
description = Clean coverage data
deps = tox-uv
commands_pre = uv sync --group test
commands =
    uv run coverage erase
